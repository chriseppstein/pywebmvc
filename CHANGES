pywebmvc-0.10.5
================================================================================
- Expanded WidgetRenderer API to include separate methods for the rendering of
   widgets of normal (read-write), read-only, and hidden types.  Added special
   rendering logic for the read-only versions of checkbox and select widgets.
   All other widgets redirect to ReadOnlyRenderer for the sake of backwards
   compatability.

pywebmvc-0.10.4
================================================================================
- Converted fieldMetaData.type to getType() method that accepts optional request
   and mapping.

pywebmvc-0.10.3
================================================================================
- Instructional text can now be associated to <form> and <fieldgroup> elements
  in addition to <field> elements.

pywebmvc-0.10.2
================================================================================
- Optimized ResourceBundle to perform ${term} style expansions at load time
  instead of read time. Any ${unknown_term} is left alone and re-expanded at
  read time with the provided parameter map.

pywebmvc-0.10.1
================================================================================
- Fixed a bug in the RadioRenderer that caused the radio button to not get
  checked according to the preset value in the form.
- Clicking on a radio label now selects the radio button.
- New <attribute>s for <field>s are now supported by the TableFormRenderer:
   + <attribute name="orient" value="vertical"/> will use a div-based layout
     inside a colspan=3 to allow css to better control the style for that field.
   + <attribute name="rowStyleClass" value="mystyle"/> will place your style
     onto the row containing the field for the TableFormRenderer.

pywebmvc-0.10.0
================================================================================
- This release is NOT backwards compatible with the previous version.
- Metadata classes forms, fieldgroups, and fields can now be overridden by
  inheriting the appropriate metadata class from pywebmvc.metadata and
  specifying the class in the config xml using the metadata-class attribute or
  the <metadata> tag. Additionally, many property accesses have now been
  replaced by method access that passes the request and action mapping - thus
  enabling customized, runtime metadata decisions to be made for a form. This
  should eliminate the need to create multiple form definitions for different
  action mappings in many cases.
- Action Mapping classes can now be overridden on a mapping-by-mapping basis
  and formMetadata property access has been replaced by getFormMetadata(req) so
  that different forms may be associated with the same mapping depending on
  runtime logic. This should eliminate the need to create multiple action
  mappings just to utilize different form definitions.

pywebmvc-0.9.11
================================================================================
- Some refactorings were made to the tools package to support more generic uses
  upon subclassing.
- A better error message is returned for required fields that do not have a
  label nor provide a custom error message.
- A bug was fixed to allow a search filter value to contain a single quote.

pywebmvc-0.9.10
================================================================================
- The FieldStorage class (aka form) no longer requires a request object to
  initialize. Initial values and default encoding can be (optionally) passed to
  the constructor instead.
- The initial values of a FieldStorage instance are captured now and can be
  restored by calling the new reset() method. This can be useful during error
  handling.

pywebmvc-0.9.9
================================================================================
- The redirect method on Action now accepts a params argument which allows for
  parameters to be passed to the next page after client redirect. The
  parameters can be a form-like object (a map of key->value-or-list-of-values)
  or a list of two-ples [(key, value), (key, value), ...].

pywebmvc-0.9.8
================================================================================
- If the apache adapter module cannot be imported a warning is issued instead
  of failing with an error. This allows some portions of pywebmvc to be used
  outside the web server container.
- Moved the FieldStorage class from formutils to apache because it is part of
  the mod_python adapter layer and keeps the mod_python imports to a single
  module.
- Allow a properties file passed to ResourceBundle.addPropertiesFile to be a
  string path to the file or a file-like obect. Previously only string paths
  were allowed.
- The redirectMaybe strategy method was not called during server side redirects
  thus allowing access to actions that would have been redirected if accessed
  directly. The redirectMaybe function is now invoked whenever the action
  mapping context of the request changes.

pywebmvc-0.9.7
================================================================================
- Added the support for recursive resource term subsititution. E.g.
  ${term.${anotherTerm}} would lookup the value of ${anotherTerm} (say "foo")
  and then lookup the value of ${term.foo}. This is especially handy when using
  runtime defined terms for achieving localization based on ids sent from
  downstream and then looking up strings in the bundle.

pywebmvc-0.9.6
================================================================================
- pywebmvc.tools.searchtool.makeSelectLookupTable() generated invalid
  javascript when used with unicode strings.

pywebmvc-0.9.5
================================================================================
- changed the use of escape/unescape where they were used in pywebmvc.js with
  encodeURIComponent/decodeURIComponent. These builtin functions work
  correctly with unicode characters.

pywebmvc-0.9.4
================================================================================
- Added the ability to specify the error handler class to be used for handling
  exceptions. This enables runtime handling decisions to be made on more than
  just exception class and to centralize handling side effects (e.g. logging)
  to one class.

pywebmvc-0.9.3
================================================================================
- Fixed an error that occured when validation failed for a field that does not
  have a label.

pywebmvc-0.9.2
================================================================================
- pushed resources that are used in the table, and validation into
  ToolMessageResources.properties.
- fixed the pager css, and edit link css in the sample-app
- added mass import inclusion in pywebmvc.__init__.py.  This allows an app to
  go "from pywebmvc import *" and get every function/class from all sub
  modules.
- added a cancel button to the sample app

pywebmvc-0.9.1
================================================================================
- changed the time filter to have the interval that is preselected be the current time.

pywebmvc-0.9.0
================================================================================
- added sample application
- fixed bug in BasicSearchCriteria::accepts().  It was handling "like" and "!=" incorrectly.

pywebmvc-0.8.16
================================================================================
- fixed a bug in the pager where it would reference negative indexes if a page size
  of zero occurred

pywebmvc-0.8.15
================================================================================
- Support for performance optimization. Added an Initializer class that can be
  called during a PythonImport to read the application configuration into
  memory at process startup.
- Added support for a new directive "PythonOption pyWebMvcProfile On" which
  will write profiler data to /tmp/pywebmvc.profile for each request.

pywebmvc-0.8.14
================================================================================
- added 'id' attributes to the OK and Cancel buttons in the search filter html.

pywebmvc-0.8.13
================================================================================
- added support to the ResourceBundle class to allow a local terminology
  dictionary to be provided, overriding or augmenting the resources already
  defined for ${resource.key} style substitions. This change is backwards
  compatible.

pywebmvc-0.8.12
================================================================================
- changed transferToForm to allow an Entity to not need to include all it's list
  properties in the form metadata.

pywebmvc-0.8.11
================================================================================
- Removed a debug alert in pywebmvc.js

pywebmvc-0.8.10
================================================================================
- Fixed a bug in formutils.href: a global forward definition was not found in
  the lookup (only action mapping ids were searched).
- All forms rendered by the default form renderer will now have a DOM id
  assigned to them that is the id of the form as defined in the configuration
  file.
- Changes to support cancelling a form post with an onbeforeunload event.

pywebmvc-0.8.9
================================================================================
- Changed the default implementation for checkbox rendering so that a value of
  "on" for checked and "off" for unchecked is always sent. This requires basic
  javascript support be enabled on the web browser. Please note: the hidden
  input field of <name>__onpage is no longer placed on the page since unchecked
  will now send a value with the form post. This change is not backwards
  compaitible -- code that had previously assumed that if the form field was
  set then it was checked will break with this change.

pywebmvc-0.8.8
================================================================================
- added support for the builtin cmp function to the WebBoolean class.

pywebmvc-0.8.7
================================================================================
- Broke out the code displaying of the filter buttons and reset buttons in the SearchTool
  class into its own member so that the layout could be overridden.

pywebmvc-0.8.6
================================================================================
- Increased the flexibility of InSearchCriteria by allowing it to take a list of items
  instead of a comma separated list.
- Modified SelectBoxFilter to adhere to new InSearchCriteria signature

pywebmvc-0.8.5
================================================================================
- removed unncessary 'req' arg to getParamNames

pywebmvc-0.8.4
================================================================================
- Added the ability to add onmouseover handlers to searchtool filter buttons.
- Merged 0.7.x branch to 0.8 mainline and picked up changes from 0.7.8 and 0.7.9

pywebmvc-0.8.3
================================================================================
- Fixed a problem with the pager when you request a page that exceeds the table size.  Now if such a request occurs
  the last page is shown rather than showing a blank page off the table page.

pywebmvc-0.8.2
================================================================================
- SearchTool now uses incremental search.

pywebmvc-0.8.1
================================================================================
- Added new accessor to Table called getParamNames
- Merged 0.7.x branch to 0.8 mainline and picked up changes from 0.7.8 and 0.7.9

pywebmvc-0.8.0
================================================================================
- Support for internationalization and localization:
  o Unicode support
  o Locale negotiation
  o Charset/encoding support

pywebmvc-0.7.9
================================================================================
- Changed some of the methods on Page and HtmlPage to take an ActionMapping in
  addition to the request. This is the convention for all methods on those
  classes and it was missing as an oversight. This change is not backwards
  compatible. Methods affected are:
    Page.getContentType(), Page.getCharset(), Page.getHeaders(),
    HtmlPage.getStylesheets(), HtmlPage.getScripts(), and HtmlPage.getTitle().
- An exception is now raised if two action mappings attempt to use the same
  path which enforces the uniqueness constraint that has always been in place.
- The text box renderer now allows for specification of the dom id which can be
  different than the name.
- Fixed a bug in the default field group renderer: The field group metadata was
  not being passed to renderStart and renderEnd.

pywebmvc-0.7.8
================================================================================
- added dictionary-style field deletion (support for the del operator) to the
  FieldStorage class.
- Fixed a bug in metadata.transferToForm() where the values of an object within
  a list were not transferred correctly if that value was not a string.
- Any action can now define a special <attribute> now to control the behavior
  of the controller when authentication fails. <attribute
  name="onAuthenticationFailure" value="fail"/> will cause the controller to
  return a 403 Forbidden response instead of redirecting to a login action.
- Session is now saved on every action so that the last access time is updated
- searchtool.py is now referencing the bundle of all its strings

pywebmvc-0.7.7
================================================================================
- Changed the default year displayed in the TimeFilter to be the current year rather than 
  2005.

pywebmvc-0.7.6
================================================================================
- rewrote transferToEntity fixing a bug with fieldgroups, and making the algorithm
  clearer.
- Allow forms to have the list attribute

pywebmvc-0.7.5
================================================================================
- Refactored prepareRequest to break out session creation.

pywebmvc-0.7.4
================================================================================
- Removed MessageDisplayer from pywebmvc.js
- Removed IDListFilter from searchtool.py
- Fixed getSelectLabel.  It now uses firstChild.nodeValue to retrieve the select label
  rather than innerHTML which didn't expand entities.

pywebmvc-0.7.3
================================================================================
- Changed the lookup algorithm for getWidgetRenderer such that if the type
  is not a known type, it will still perform a lookup from the registered
  renderers using the field's type's input value as the renderer type. This
  allows new types of renders to be written and registered and used by an
  application transparently.

pywebmvc-0.7.2
================================================================================
- Fixed a bug in apache.py where FieldStore couldn't handle xml.
  This fix will be refactored soon.
- Added XMLPage which can be used as the base class for any page returning
  XML content.

pywebmvc-0.7.1
================================================================================
- Fixed a bug in getXMLHttpRequestObject, where a global variable req was
  referenced instead of a local

pywebmvc-0.7
================================================================================
- Moved MessageDisplayer into pywebmvc

pywebmvc-0.6.2
================================================================================
- Fixed a bug which prohibited two IDFilters from being used on the same page.

pywebmvc-0.6.1
================================================================================
- Fixed a bug in the exception handling routine where a handled exception was
  treated as unhandled and re-raised after handling. Since this was after the
  response was sent to the client, it was relatively benign but could cause
  apache response code handling for 500 and 404 to kick in unecessarily.

pywebmvc-0.6.0
================================================================================
- Added a hook, getOnSubmit(), to the form renderer which allows onsubmit
  javascript to be added to the generated html form.
- Merged SearchTool and SearchCriteria components into PyWebMVC tools.
- Merged common javascript and css into pywebmvc.js and pywebmvc.css
  respectively, from ACA and NOC
- Merged Table and Pager into PyWebMVC
- Fixed a small bug in html.truncateText which caused a javascript error

pywebmvc-0.5.0
================================================================================
- Added Logger class which simplifies access to the apache logging.
- Added MultilineRadioRenderer which renders radio lists separated by breaks.
- fixed a missing import in metadata.py which caused a error handling routine
  to not be able to raise the desired exception when a duplicate field name or
  property was detected in the configuration file.

pywebmvc-0.4.0
================================================================================
- There are no API changes in this release. However, some changes to the
  generated HTML could affect CSS and JS interaction in the client-side code. 
- Labels for form fields are now enclosed by a <label> tag instead of a <span>.
  The for attribute is set to the id of the form element. All form controls now
  have an id attribute that is the same as the name.

pywebmvc-0.3.0
================================================================================
- All changes in this release are backwards compatible with 0.2.0
- A new type of global <forward> is available for the application configuration
  which allows the outcome of an action to be an abitrary server-relative
  resource. This is useful for accessing static content as well as interfacing
  with other frameworks. See the documentation on the PathForward class for
  more information.
- The formutils.href function has changed to accept an optional data parameter
  that provides query arguments to the url being formed. Added test cases to
  cover new functionality. Created test application scaffolding for testing
  functions requiring a well-formed application configuration (like this one).

pywebmvc-0.2.0
================================================================================
- All changes in this release are backwards compatible with 0.1.0
- Now provides functional test case capability where the actions can be
  accessed from the running web server via http and the response verified.
  Additionally, there are utility functions for creating an automated test
  suite based on actions defined in the config.xml file. See the following
  classes and functions in pywebmvc.unittest.testutils for more information:
  ActionTester, HttpTestCase, getUntestedActionsTestSuite
- Added new parser function pywebmvc.framework.parser.readConfigFromFile. This
  function exposes the parser functionality so that it can be used outside of
  the mod_python container.
- Added new accessor function getActionMappings to PyWebMvcConfiguration to get
  all the ActionMappings for the application.

pywebmvc-0.1.0
================================================================================
- Initial release of pywebmvc.
